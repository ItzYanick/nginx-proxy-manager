name: Build and publish container

on:
  release:
    types: [published]

jobs:
  ghr_push:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Frontend
        run: ./scripts/frontend-build
      - name: backend1
        run: docker pull nginxproxymanager/nginx-full:certbot-node
      - name: backend2
        run: docker run --rm \\
					-v "$(pwd)/backend:/app" \\
					-v "$(pwd)/global:/app/global" \\
					-w /app \\
					nginxproxymanager/nginx-full:certbot-node \\
					sh -c "yarn install && yarn eslint . && rm -rf node_modules"
      - name: backend3
        run: docker build --pull --no-cache --squash --compress \\
					-t "${IMAGE}:ci-${BUILD_NUMBER}" \\
					-f docker/Dockerfile \\
					--build-arg TARGETPLATFORM=linux/amd64 \\
					--build-arg BUILDPLATFORM=linux/amd64 \\
					--build-arg BUILD_VERSION="${BUILD_VERSION}" \\
					--build-arg BUILD_COMMIT="${BUILD_COMMIT}" \\
					--build-arg BUILD_DATE="$(date '+%Y-%m-%d %T %Z')" \\
					.
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Log-in to ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and push container image
        run: |
          IMAGE_ID=$(echo ghcr.io/${{ github.repository }} | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # when the branch is master, replace master with latest
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          # Build and Publish container image
          ./scripts/buildx --push -t $IMAGE_ID:$VERSION